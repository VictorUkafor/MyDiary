{"version":3,"sources":["../../../server/routes/index.js"],"names":["process","env","apiRouter","express","Router","user","UserController","jwt","bcrypt","queries","entry","EntryController","databaseMiddleware","DatabaseMiddleware","pg","userMiddleware","UserMidddleware","entryMiddleware","EntryMiddleware","post","checksForSignUpRequiredFields","checksIfPhotoIsUploaded","handlesConnectionToTheDatabase","checksIfUserAlreadyExist","postUser","checksForLogInRequiredFields","checksIfUserExist","loginUser","get","checksIfUserIsAuthenticated","getAUser","getAllEntries","searchEntries","checksIfEntryExist","getEntry","checksForAddEntryRequiredFields","postEntry","put","checksIfEntryCanBeUpdated","putEntry","deleteEntry"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;eAEgBA,O;IAARC,G,YAAAA,G;;AACR,IAAMC,YAAYC,qBAAQC,MAAR,EAAlB;AACA,IAAMC,OAAO,IAAIC,kBAAJ,CAAmBC,yBAAnB,EAAwBC,mBAAxB,EAAgCP,GAAhC,EAAqCQ,oBAArC,CAAb;AACA,IAAMC,QAAQ,IAAIC,oBAAJ,CAAoBF,oBAApB,CAAd;AACA,IAAMG,qBAAqB,IAAIC,gCAAJ,CAAuBC,eAAvB,EAA2Bb,GAA3B,CAA3B;AACA,IAAMc,iBAAiB,IAAIC,4BAAJ,CAAoBT,yBAApB,EAAyBN,GAAzB,EAA8BQ,oBAA9B,CAAvB;AACA,IAAMQ,kBAAkB,IAAIC,6BAAJ,CAAoBT,oBAApB,CAAxB;;AAGAP,UAAUiB,IAAV,CACE,cADF,EAEEJ,eAAeK,6BAFjB,EAGEL,eAAeM,uBAHjB,EAIET,mBAAmBU,8BAJrB,EAKEP,eAAeQ,wBALjB,EAMElB,KAAKmB,QANP;;AASAtB,UAAUiB,IAAV,CACE,aADF,EAEEJ,eAAeU,4BAFjB,EAGEb,mBAAmBU,8BAHrB,EAIEP,eAAeW,iBAJjB,EAKErB,KAAKsB,SALP;;AAQAzB,UAAU0B,GAAV,CACE,OADF,EAEEhB,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIExB,KAAKyB,QAJP;;AAOA5B,UAAU0B,GAAV,CACE,UADF,EAEEhB,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIEnB,MAAMqB,aAJR;;AAOA7B,UAAUiB,IAAV,CACE,iBADF,EAEEP,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIEnB,MAAMsB,aAJR;;AAOA9B,UAAU0B,GAAV,CACE,mBADF,EAEEhB,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIEZ,gBAAgBgB,kBAJlB,EAKEvB,MAAMwB,QALR;;AAQAhC,UAAUiB,IAAV,CACE,UADF,EAEEP,mBAAmBU,8BAFrB,EAGEL,gBAAgBkB,+BAHlB,EAIEpB,eAAec,2BAJjB,EAKEnB,MAAM0B,SALR;;AAQAlC,UAAUmC,GAAV,CACE,mBADF,EAEEzB,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIEZ,gBAAgBgB,kBAJlB,EAKEhB,gBAAgBqB,yBALlB,EAME5B,MAAM6B,QANR;;AASArC,oBACE,mBADF,EAEEU,mBAAmBU,8BAFrB,EAGEP,eAAec,2BAHjB,EAIEZ,gBAAgBgB,kBAJlB,EAKEvB,MAAM8B,WALR;;qBASetC,S","file":"index.js","sourcesContent":["import express from 'express';\nimport jwt from 'jsonwebtoken';\nimport pg from 'pg';\nimport bcrypt from 'bcrypt';\nimport {} from 'dotenv/config';\nimport queries from '../models/queries';\nimport UserController from '../controllers/users';\nimport EntryController from '../controllers/entries';\nimport DatabaseMiddleware from '../middlewares/database-middlewares';\nimport UserMidddleware from '../middlewares/user-middlewares';\nimport EntryMiddleware from '../middlewares/entry-middlewares';\n\nconst { env } = process;\nconst apiRouter = express.Router();\nconst user = new UserController(jwt, bcrypt, env, queries);\nconst entry = new EntryController(queries);\nconst databaseMiddleware = new DatabaseMiddleware(pg, env);\nconst userMiddleware = new UserMidddleware(jwt, env, queries);\nconst entryMiddleware = new EntryMiddleware(queries);\n\n\napiRouter.post(\n  '/auth/signup',\n  userMiddleware.checksForSignUpRequiredFields,\n  userMiddleware.checksIfPhotoIsUploaded,\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserAlreadyExist,\n  user.postUser\n);\n\napiRouter.post(\n  '/auth/login',\n  userMiddleware.checksForLogInRequiredFields,\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserExist,\n  user.loginUser\n);\n\napiRouter.get(\n  '/user',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  user.getAUser\n);\n\napiRouter.get(\n  '/entries',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entry.getAllEntries\n);\n\napiRouter.post(\n  '/entries/search',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entry.searchEntries\n);\n\napiRouter.get(\n  '/entries/:entryId',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entryMiddleware.checksIfEntryExist,\n  entry.getEntry\n);\n\napiRouter.post(\n  '/entries',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  entryMiddleware.checksForAddEntryRequiredFields,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entry.postEntry\n);\n\napiRouter.put(\n  '/entries/:entryId',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entryMiddleware.checksIfEntryExist,\n  entryMiddleware.checksIfEntryCanBeUpdated,\n  entry.putEntry\n);\n\napiRouter.delete(\n  '/entries/:entryId',\n  databaseMiddleware.handlesConnectionToTheDatabase,\n  userMiddleware.checksIfUserIsAuthenticated,\n  entryMiddleware.checksIfEntryExist,\n  entry.deleteEntry\n);\n\n\nexport default apiRouter;\n"]}