{"version":3,"sources":["../../../client/js/single-entry.js"],"names":["oneEntry","entry","title","content","entry_id","getEntry","entryId","localStorage","getItem","url","token","modifyEntry","dataForFetch","method","headers","authentication","fetch","then","res","json","data","authenticated","errors","login","window","setItem","location","href","document","getElementById","innerHTML","removeItem","error","console","log"],"mappings":";;AAAA,IAAMA,WAAW,SAAXA,QAAW;AAAA,SAAS,MAAG,kCACzB,+CADsB,WAC4BC,MAAMC,KADlC,mEAEqBD,MAAME,OAF3B,8DAGUF,MAAMG,QAHhB,iHAIUH,MAAMG,QAJhB,sEAKtB,QALa;AAAA,CAAjB;;AAOA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACrB,MAAMC,UAAUC,aAAaC,OAAb,CAAqB,SAArB,CAAhB;AACA,MAAMC,mFAA0EH,OAA1E,CAAN;AACA,MAAMI,QAAQH,aAAaC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAMG,cAAcJ,aAAaC,OAAb,CAAqB,aAArB,CAApB;AACA,MAAMI,eAAe;AACnBC,YAAQ,KADW;AAEnBC,aAAS;AACP,sBAAgB,kBADT;AAEPC,sBAAgBL;AAFT;AAFU,GAArB;;AAQAM,QAAMP,GAAN,EAAWG,YAAX,EACGK,IADH,CACQ;AAAA,WAAOC,IAAIC,IAAJ,EAAP;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACd,QAAIA,KAAKC,aAAL,KAAuB,KAAvB,IAAgCD,KAAKE,MAAzC,EAAiD;AAC/C,UAAMC,QAAQ,wBAAd;AACAC,aAAOjB,YAAP,CAAoBkB,OAApB,CAA4B,OAA5B,EAAqCF,KAArC;AACAC,aAAOE,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AACD,KAJD,MAIO;AACL,UAAIhB,WAAJ,EAAiB;AACfiB,iBAASC,cAAT,CAAwB,gBAAxB,EAA0CC,SAA1C,wCAC4BnB,WAD5B;AAED;AACDiB,eAASC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,IAAqD9B,SAASoB,IAAT,CAArD;AACAI,aAAOjB,YAAP,CAAoBwB,UAApB,CAA+B,aAA/B;AACD;AACF,GAfH,WAgBS,UAACC,KAAD,EAAW;AAChBC,YAAQC,GAAR,CAAYF,KAAZ;AACD,GAlBH;;AAoBA,SAAO,KAAP;AACD,CAlCD;;AAoCA3B","file":"single-entry.js","sourcesContent":["const oneEntry = entry => `${'<div class=\"entry-container\">' +\n    '<div class=\"entry-body\"><h1 class=\"entry-h1\">'}${entry.title}</h1>` +\n    `<hr class=\"entry-hr\"/><p class=\"entryP\">${entry.content}</p></div>` +\n    `<button onclick=\"modifyEntry(${entry.entry_id})\"  type=\"submit\" class=\"form-button button2\">Modify</button>` +\n    `<button onclick=\"deleteEntry(${entry.entry_id})\" type=\"submit\" class=\"form-button button2\">Delete</button>` +\n    '</div>';\n\nconst getEntry = () => {\n  const entryId = localStorage.getItem('entryId');\n  const url = `https://deploy-challenge3-to-heroku.herokuapp.com/api/v1/entries/${entryId}`;\n  const token = localStorage.getItem('token');\n  const modifyEntry = localStorage.getItem('modifyEntry');\n  const dataForFetch = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      authentication: token\n    }\n  };\n\n  fetch(url, dataForFetch)\n    .then(res => res.json())\n    .then((data) => {\n      if (data.authenticated === false || data.errors) {\n        const login = 'oop! You have to login';\n        window.localStorage.setItem('login', login);\n        window.location.href = 'sign-in.html';\n      } else {\n        if (modifyEntry) {\n          document.getElementById('successMessage').innerHTML =\n          `<h1 class=\"successField\">${modifyEntry}</h1>`;\n        }\n        document.getElementById('single-entry').innerHTML += oneEntry(data);\n        window.localStorage.removeItem('modifyEntry');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  return false;\n};\n\ngetEntry();\n"]}