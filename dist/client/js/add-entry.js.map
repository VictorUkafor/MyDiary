{"version":3,"sources":["../../../client/js/add-entry.js"],"names":["processAddEntry","url","token","localStorage","getItem","title","document","forms","addEntry","value","content","getElementById","innerHTML","dataForFetch","method","body","JSON","stringify","headers","authentication","fetch","then","res","json","data","authenticated","login","window","setItem","location","href","errors","success","error","console","log"],"mappings":";;AAAA,IAAMA,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,MAAM,kEAAZ;AACA,MAAMC,QAAQC,aAAaC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAMC,QAAQC,SAASC,KAAT,CAAeC,QAAf,CAAwBH,KAAxB,CAA8BI,KAA5C;AACA,MAAMC,UAAUJ,SAASC,KAAT,CAAeC,QAAf,CAAwBE,OAAxB,CAAgCD,KAAhD;;AAEAH,WAASK,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,EAApD;;AAEA,MAAMC,eAAe;AACnBC,YAAQ,MADW;AAEnBC,UAAMC,KAAKC,SAAL,CAAe,EAAEZ,YAAF,EAASK,gBAAT,EAAf,CAFa;AAGnBQ,aAAS;AACP,sBAAgB,kBADT;AAEPC,sBAAgBjB;AAFT;AAHU,GAArB;;AASAkB,QAAMnB,GAAN,EAAWY,YAAX,EACGQ,IADH,CACQ;AAAA,WAAOC,IAAIC,IAAJ,EAAP;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACd,QAAIA,KAAKC,aAAL,KAAuB,KAA3B,EAAkC;AAChC,UAAMC,QAAQ,wBAAd;AACAC,aAAOxB,YAAP,CAAoByB,OAApB,CAA4B,OAA5B,EAAqCF,KAArC;AACAC,aAAOE,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AACD,KAJD,MAIO,IAAIN,KAAKO,MAAT,EAAiB;AACtBzB,eAASK,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,sCAC8BY,KAAKO,MADnC;AAED,KAHM,MAGA;AACLJ,aAAOxB,YAAP,CAAoByB,OAApB,CAA4B,aAA5B,EAA2C,SAA3C;AACAD,aAAOxB,YAAP,CAAoByB,OAApB,CAA4B,UAA5B,EAAwCJ,KAAKQ,OAA7C;AACAL,aAAOE,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AACD;AACF,GAfH,WAgBS,UAACG,KAAD,EAAW;AAChBC,YAAQC,GAAR,CAAYF,KAAZ;AACD,GAlBH;;AAoBA,SAAO,KAAP;AACD,CAtCD","file":"add-entry.js","sourcesContent":["const processAddEntry = () => {\n  const url = 'https://deploy-challenge3-to-heroku.herokuapp.com/api/v1/entries';\n  const token = localStorage.getItem('token');\n  const title = document.forms.addEntry.title.value;\n  const content = document.forms.addEntry.content.value;\n\n  document.getElementById('errorMessage').innerHTML = '';\n\n  const dataForFetch = {\n    method: 'POST',\n    body: JSON.stringify({ title, content }),\n    headers: {\n      'Content-Type': 'application/json',\n      authentication: token\n    }\n  };\n\n  fetch(url, dataForFetch)\n    .then(res => res.json())\n    .then((data) => {\n      if (data.authenticated === false) {\n        const login = 'oop! You have to login';\n        window.localStorage.setItem('login', login);\n        window.location.href = 'sign-in.html';\n      } else if (data.errors) {\n        document.getElementById('errorMessage').innerHTML =\n            `<h1 class=\"errorField\">${data.errors}</h1>`;\n      } else {\n        window.localStorage.setItem('entriesPage', 'default');\n        window.localStorage.setItem('addEntry', data.success);\n        window.location.href = 'all-entries.html';\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  return false;\n};\n"]}